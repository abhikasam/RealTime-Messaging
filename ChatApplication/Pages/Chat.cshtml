@page
@using ChatApplication.Code
@model ChatModel
@{
    ViewData["Title"] = "Chat";
}

<h1>Real-Time Chat</h1>

<div class="row">
    <div class="col-md-6 col-sm-12">
        <div class="row">
            <div class="col-6">
                <select id="fromInput" class="form-control" onchange="getTopic()">
                    <option value="">-Select One-</option>
                    @foreach (var item in Model.Customers)
                    {
                        <option value="@item.Id">
                            @(item.FirstName + " " + item.LastName)
                        </option>
                    }
                </select>
            </div>
            <div class="col-6">
                <select id="toInput" class="form-control" onchange="getTopic()">
                    <option value="">-Select One-</option>
                    @foreach (var item in Model.Customers)
                    {
                        <option value="@item.Id">
                            @(item.FirstName + " " + item.LastName)
                        </option>
                    }
                </select>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <textarea id="messageInput" placeholder="Message" style="width:100%"></textarea>
            </div>
        </div>
        <div class="row">
            <div class="col-6 text-center">
                <button onclick="sendMessage()">Send</button>
            </div>
            <div class="col-6 text-center">
                <button onclick="retrieveMessages()">Retrieve</button>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-sm-12">
        <div class="row text-decoration-underline">
            <div class="col-6 text-start">
                <div id="senderName">
                </div>
            </div>
            <div class="col-6 text-end">
                <div id="receiverName">
                </div>
            </div>
        </div>
        <div id="messagesList">
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js" integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script type="text/javascript">
        var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
        $(document).ready(function () {
            connection.start().catch(function (err) {
                return console.error(err.toString());
            });
        });

        function sendMessage() {
            var from = $("#fromInput").val();
            var to = $("#toInput").val();
            var message = $("#messageInput").val();
            if (from != to && message) {
                $("#messageInput").val("")
                connection.invoke("SendMessage", from, to, message).then(function (res) {
                    console.log(res)
                }).catch(function (err) {
                    return console.error(err.toString());
                });
            }
        }

        function retrieveMessages() {
            var from = $("#fromInput").val();
            var to = $("#toInput").val();
            if (from && to && from != to) {
                $.ajax({
                    url: "/Chat?handler=Messages",
                    type: 'get',
                    data: {
                        from: from, to: to
                    },
                    success: function (res) {
                        $('#messagesList').html('')
                        let fromName = $('#fromInput option:selected').text().trim()
                        for (let msg of res) {
                            let alignClass="text-end"
                            if(fromName==msg.fromCustomer.fullName)
                                alignClass="text-start"
                            var div = $('<div class="'+alignClass+'"></div>')
                            div.html(`${msg.message}`)
                            $("#messagesList").append(div)
                        }
                    }
                });
            }
        }

        function getTopic() {
            var from = document.getElementById("fromInput").value;
            var to = document.getElementById("toInput").value;
            if (from.length && to.length && from != to) {
                $.ajax({
                    url: "/Chat?handler=Topic",
                    type: 'get',
                    data: {
                        from: from, to: to
                    },
                    success: function (res) {
                        $("#messagesList").html('')
                        let connections = Object.keys(connection.nt)
                        connections.forEach((c) => connection.off(c))
                        let fromName = $('#fromInput option:selected').text().trim()
                        let toName = $('#toInput option:selected').text().trim()
                        $('#senderName').html(fromName)
                        $('#receiverName').html(toName)
                        connection.on("ReceiveMessage-" + res, function (sender, receiver, message) {
                            let alignClass = "text-end"
                            console.log(fromName,sender)
                            if (fromName == sender.fullName)
                                alignClass = "text-start"
                            var div = $('<div class="' + alignClass + '"></div>')
                            div.html(`${message}`)
                            $("#messagesList").append(div)
                        });

                        retrieveMessages()
                    }
                });
            }
        }

    </script>
}
